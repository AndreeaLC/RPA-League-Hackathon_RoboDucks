<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetDemandDetails"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_dictionary" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetDemandDetails_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow gets the details from the Demand table and also cleans the data. If the OCR failed to retrieve a cell data, it's value will be empty. &#xD;&#xA;&#xD;&#xA;Pre requisites: the aplication is opened to the specified page and the user has chose 2 dots, one red and one green&#xD;&#xA;Post requisites: the out_dictionary contains pair of keyname (left column) - value (right column) of the demand table" DisplayName="GetDemandDetails" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(Of String, String)]" Name="dictionarValori" />
      <Variable x:TypeArguments="x:Int32" Name="idex" />
      <Variable x:TypeArguments="ui:GenericValue" Name="name" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)]" Name="listaFileduri" />
    </Sequence.Variables>
    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey 'page down'" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="pgdn" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
      <ui:SendHotkey.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="543b5a838334f51f99a1634d04941f79" Selector="&lt;html title='Automation Challenge' /&gt;&lt;webctrl css-selector='body&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div' idx='2' tag='DIV' /&gt;" WaitForReady="INTERACTIVE" />
      </ui:SendHotkey.Target>
    </ui:SendHotkey>
    <Assign DisplayName="Assign initial value of index" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[idex]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">3</InArgument>
      </Assign.Value>
    </Assign>
    <ui:AnchorBase AnchorPosition="Auto" DisplayName="Anchor base - name" sap2010:WorkflowViewState.IdRef="AnchorBase_1">
      <ui:AnchorBase.Action>
        <ActivityAction x:TypeArguments="ui:Anchor">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
          </ActivityAction.Argument>
          <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'name'" sap2010:WorkflowViewState.IdRef="GetValue_3">
            <ui:GetValue.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="23107e51711efdf369aebbbca7bec940" Selector="&lt;webctrl tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
            </ui:GetValue.Target>
            <ui:GetValue.Value>
              <OutArgument x:TypeArguments="ui:GenericValue">[name]</OutArgument>
            </ui:GetValue.Value>
          </ui:GetValue>
        </ActivityAction>
      </ui:AnchorBase.Action>
      <ui:AnchorBase.AnchorProvider>
        <ui:WaitUiElementAppear FoundElement="{x:Null}" DisplayName="Find Element 'name'" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1" WaitActive="False" WaitVisible="False">
          <ui:WaitUiElementAppear.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="4804a245e8d4fffcabf2d23490f6be55" Selector="&lt;html title='Automation Challenge' /&gt;&lt;webctrl id='demand_table' tag='TABLE' /&gt;&lt;webctrl idx='1' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
          </ui:WaitUiElementAppear.Target>
        </ui:WaitUiElementAppear>
      </ui:AnchorBase.AnchorProvider>
    </ui:AnchorBase>
    <Assign DisplayName="Assign key name - key value" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[dictionarValori("name")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[name]</InArgument>
      </Assign.Value>
    </Assign>
    <While DisplayName="While we have more rows in the table" sap2010:WorkflowViewState.IdRef="While_1">
      <While.Variables>
        <Variable x:TypeArguments="x:String" Name="keyName" />
      </While.Variables>
      <While.Condition>[idex &lt; 12]</While.Condition>
      <Sequence DisplayName="Sequence - preprocess row" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="valueName" />
          <Variable x:TypeArguments="x:Boolean" Default="False" Name="foundElement" />
          <Variable x:TypeArguments="x:Int32" Name="scope" />
        </Sequence.Variables>
        <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[idex.ToString]" />
            </Sequence>
          </ui:CommentOut.Body>
        </ui:CommentOut>
        <Assign DisplayName="Assign initial state of element" sap2010:WorkflowViewState.IdRef="Assign_7">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[foundElement]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign inital scale" sap2010:WorkflowViewState.IdRef="Assign_15">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[scope]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">2</InArgument>
          </Assign.Value>
        </Assign>
        <While DisplayName="While not current element is found" sap2010:WorkflowViewState.IdRef="While_2" Condition="[not foundElement]">
          <TryCatch DisplayName="Try to find current element" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <TryCatch.Try>
              <Sequence DisplayName="Sequence get current element" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <ui:GetOCRText Text="{x:Null}" WordsInfo="{x:Null}" DisplayName="Get OCR 'current element'" sap2010:WorkflowViewState.IdRef="GetOCRText_2">
                  <ui:GetOCRText.OCREngine>
                    <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                      <ActivityFunc.Argument>
                        <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                      </ActivityFunc.Argument>
                      <ui:MicrosoftOCR FilterRegion="{x:Null}" DisplayName="Microsoft OCR" ExtractWords="False" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_2" Image="[Image]" Language="en" Profile="None" Scale="[scope]" Text="[keyName]" />
                    </ActivityFunc>
                  </ui:GetOCRText.OCREngine>
                  <ui:GetOCRText.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="7228580c9a35dd9630fa964d249c99f6" Selector="[&quot;&lt;html title='Automation Challenge' /&gt;&lt;webctrl id='demand_table' tag='TABLE' /&gt;&lt;webctrl tableCol='1' tableRow='&quot;+ idex.ToString +&quot;' tag='TD' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                  </ui:GetOCRText.Target>
                </ui:GetOCRText>
                <Assign DisplayName="Make key name lower" sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[keyName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[keyName.ToLower]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[not keyName.Contains(&quot;address&quot;)]" DisplayName="If it is not address" sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Then>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CleanData workflow on the key name" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="CleanData.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_data">[keyName]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_cleanedData">[keyName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </If.Then>
                </If>
                <Assign DisplayName="Assign - element is found" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[foundElement]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <If Condition="[scope &gt;5]" sap2010:WorkflowViewState.IdRef="If_5">
                      <If.Then>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                          <Assign DisplayName="Assign scale to 1" sap2010:WorkflowViewState.IdRef="Assign_17">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[scope]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">1</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey page down" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="pgdn" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                            <ui:SendHotkey.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="f31b127426aed3a04fd52d9d7321a726" Selector="&lt;html title='Automation Challenge' /&gt;&lt;webctrl css-selector='body&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div' idx='2' tag='DIV' /&gt;" WaitForReady="INTERACTIVE" />
                            </ui:SendHotkey.Target>
                          </ui:SendHotkey>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Assign DisplayName="Assign scale to next scale" sap2010:WorkflowViewState.IdRef="Assign_16">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[scope]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[scope + 1]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </While>
        <If Condition="[keyName is Nothing]" DisplayName="If keyName is null" sap2010:WorkflowViewState.IdRef="If_6">
          <If.Then>
            <Assign DisplayName="Assign a random keyname" sap2010:WorkflowViewState.IdRef="Assign_21">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[keyName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">random</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
        </If>
        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text current row data" sap2010:WorkflowViewState.IdRef="GetValue_2">
          <ui:GetValue.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ec1ae290d02a115d627be0bd68a01d01" Selector="[&quot;&lt;html title='Automation Challenge' /&gt;&lt;webctrl id='demand_table' tag='TABLE' /&gt;&lt;webctrl isleaf='1' tableRow='&quot;+ idex.ToString +&quot;' tag='TD' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
          </ui:GetValue.Target>
          <ui:GetValue.Value>
            <OutArgument x:TypeArguments="x:String">[valueName]</OutArgument>
          </ui:GetValue.Value>
        </ui:GetValue>
        <Flowchart DisplayName="Flowchart assignation of the current dictionary name - value" sap2010:WorkflowViewState.IdRef="Flowchart_1">
          <Flowchart.Variables>
            <Variable x:TypeArguments="x:Int32" Name="num" />
          </Flowchart.Variables>
          <Flowchart.StartNode>
            <FlowDecision x:Name="__ReferenceID0" Condition="[not keyName.Contains(&quot;address&quot;) or keyName.Contains(&quot;address 1&quot;) or keyName.Contains(&quot;address 2&quot;)]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dictionarValori(keyName)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[valueName]</InArgument>
                    </Assign.Value>
                  </Assign>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <FlowDecision x:Name="__ReferenceID3" Condition="[keyName =&quot;address 1&quot; or keyName = &quot;address 2&quot;]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_4">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[dictionarValori("address 1")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[valueName]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                      <If Condition="[keyName.Contains(&quot;address&quot;) and Integer.TryParse(valueName, num)]" sap2010:WorkflowViewState.IdRef="If_3">
                        <If.Then>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[dictionarValori("address 1")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[valueName]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[dictionarValori("address 2")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[valueName]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                    </FlowStep>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowDecision.False>
            </FlowDecision>
          </Flowchart.StartNode>
          <x:Reference>__ReferenceID0</x:Reference>
          <x:Reference>__ReferenceID1</x:Reference>
          <x:Reference>__ReferenceID2</x:Reference>
          <x:Reference>__ReferenceID3</x:Reference>
          <x:Reference>__ReferenceID4</x:Reference>
        </Flowchart>
        <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_2">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_17">
              <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[keyName + &quot; &quot; + valueName]" />
            </Sequence>
          </ui:CommentOut.Body>
        </ui:CommentOut>
        <Assign DisplayName="Assign - go to the next row" sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[idex]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[idex + 1]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
    </While>
    <Assign DisplayName="Assign - out dictionary" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[out_dictionary]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictionarValori]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="listaElemente.Add(&quot;ship preference&quot;)&#xA;listaElemente.Add(&quot;city&quot;)&#xA;listaElemente.Add(&quot;zip code&quot;)&#xA;listaElemente.Add(&quot;address 1&quot;)&#xA;listaElemente.Add(&quot;address 2&quot;)&#xA;listaElemente.Add(&quot;state&quot;)&#xA;listaElemente.Add(&quot;shipping date&quot;)&#xA;listaElemente.Add(&quot;cargo&quot;)&#xA;listaElemente.Add(&quot;cargo preference&quot;)" DisplayName="Invoke Code - current rows in table demand" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="listaElemente">[listaFileduri]</InOutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each row in table demand" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[listaFileduri]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <Flowchart DisplayName="Flowchart - make random choises if no value is found" sap2010:WorkflowViewState.IdRef="Flowchart_2">
              <Flowchart.StartNode>
                <FlowDecision x:Name="__ReferenceID5" Condition="[not dictionarValori.Keys.Contains(item.ToString)]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                  <FlowDecision.True>
                    <FlowDecision x:Name="__ReferenceID7" Condition="[item.ToString = &quot;ship preference&quot;]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_5">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[dictionarValori(item.ToString)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Flatbed</InArgument>
                            </Assign.Value>
                          </Assign>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_6">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[dictionarValori(item.ToString)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </FlowStep>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowDecision.True>
                </FlowDecision>
              </Flowchart.StartNode>
              <x:Reference>__ReferenceID5</x:Reference>
              <x:Reference>__ReferenceID6</x:Reference>
              <x:Reference>__ReferenceID7</x:Reference>
              <x:Reference>__ReferenceID8</x:Reference>
            </Flowchart>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <sads:DebugSymbol.Symbol>d5ABQzpcVXNlcnNcYWxleGFuZHJ1LmZpZXJhc2N1XERlc2t0b3BcVWlQYXRoXFYyXFJQQS1MZWFndWUtSGFja2F0aG9uX1JvYm9EdWNrc1xSUEEtTGVhZ3VlX0hhY2thdGhvbl9Sb2JvRHVja3MgdjJcVWlQYXRoQnJpZWZcR2V0RGVtYW5kRGV0YWlscy54YW1sb0wDowMOAgEBTk5OcwIBA1E+UVUCAQJTBVcVAwGiAVgFXw4DAZ4BYAV3FQMBlwF4BX8OAwGTAYABBeECDQIBHuICBekCDgIBGeoCBe4CFQIBFu8CBaEDEgIBBFWYAVWoAgMBpAFT8AFT9gEDAaMBXS9dMAMBoQFaMFo2AwGfAXEJdSIDAZwBZgttGQMBmAF9MH02AwGWAXoxekoDAZQBhQEH4AISAgEhhAEYhAEmAgEf5wJK5wJbAgEc5AJL5AJbAgEa7AJT7AJiAgEX7wKkAe8CtQECART1AgueAxYCAQVznAFzmgIDAZ0Baz5rRAMBmQFongFougEDAZsBiAE5iAFAAgEiiwEJkQEZAwGSAZIBCZkBEgMBjgGaAQmhARIDAYoBogEJ+AERAgFX+QEJhAIOAgFQhQIJjAIXAgFLjQIJ0AIVAgEp0QIJ1wIZAgEo2AIJ3wISAgEj9gINnQMZAgEGlwE1lwE6AwGRAZQBNpQBRAMBjwGfATOfATQDAY0BnAE0nAE7AwGLAaMBC/cBFgIBWqIBdaIBiQECAVj5ARf5AS0CAVH7AQ2CAhYCAVOKAjWKAkACAUyHApwBhwLUAgIBTpICPZICwAECAUegAkGgAoYBAgFErwIXxAIcAgE1owIXqgIgAgEwlQITnAIcAgEq3QIz3QI9AgEm2gI02gI6AgEk+AJB+AJ1AgET+gJF+gJ0AgERiQMbkgMkAgEM/QIbhAMkAgEHpQEPzQEaAgFs1QET8wEeAgFbgAI4gAI+AgFW/QE5/QFCAgFUrwIlrwJzAgE2sQIbuAIkAgE/uwIbwgIkAgE6qAJCqAJNAgEzpQJDpQJhAgExmgI+mgJJAgEulwI/lwJZAgErjwMhjwNQAgEQiwNHiwNnAgENggNGggNNAgEL/wJH/wJnAgEIpgERsgEhAgF/swERugEaAgF6uwERxAEWAgFxxQERzAEaAgFt1gEV8gEaAgFctgJGtgJRAgFCswJHswJlAgFAwAJGwAJRAgE9vQJHvQJlAgE7sAGkAbAB3gIDAYgBrAEXrAHyAQMBgAG4ATy4AU0CAX21AT21AUYCAXu7AR+7AUwCAXK9ARXCAS0CAXTKAT3KAUECAXDHAT7HAUwCAW7WASPWATICAV3YARnmASQCAWTpARnwASICAV+sAeQBrAHvAQMBhgGsAdUBrAHeAQMBhAGsAagBrAGxAQMBggGsAbsBrAG/AQMBgQG/AVC/AVkCAXi9AdYBvQHmAQIBd8ABWcABYgIBddkBG+ABJAIBaOEBG+UBKwIBZe4BQ+4BTgIBYusBROsBSwIBYN4BRd4BRgIBa9sBRtsBTQIBaeMBrgHjAb4CAgFn4QGEAuEBigICAWY=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="SendHotkey_2" sap:VirtualizedContainerService.HintSize="719,154" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="719,60" />
      <sap2010:ViewStateData Id="GetValue_3" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_1" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="AnchorBase_1" sap:VirtualizedContainerService.HintSize="719,198" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="719,60" />
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="210,61" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="232,185">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="671,263" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="671,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="671,60" />
      <sap2010:ViewStateData Id="MicrosoftOCR_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetOCRText_2" sap:VirtualizedContainerService.HintSize="464,168" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,235" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="486,767">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="SendHotkey_3" sap:VirtualizedContainerService.HintSize="314,154" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="336,378">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="603,526" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="625,650">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="631,719">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="645,881" />
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="671,1039" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="671,208" />
      <sap2010:ViewStateData Id="GetValue_2" sap:VirtualizedContainerService.HintSize="671,106" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">9,250</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">109,360</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">410,394.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="79,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">390.5,276.5</av:Point>
            <av:Size x:Key="ShapeSize">79,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">390.5,320 230,320 230,360</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">469.5,320 510,320 510,394.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="79,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">170.5,106.5</av:Point>
            <av:Size x:Key="ShapeSize">79,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">170.5,150 130,150 130,250</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">249.5,150 410.25,150 410.25,276.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="671,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">270,40 229.75,40 229.75,106.5</av:PointCollection>
            <x:Double x:Key="Width">610</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="210,61" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="232,185">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_2" sap:VirtualizedContainerService.HintSize="671,263" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="671,60" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="693,3139">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="719,3297" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="719,60" />
      <sap2010:ViewStateData Id="InvokeCode_1" sap:VirtualizedContainerService.HintSize="719,164" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">19,420</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">289,320</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_3" sap:VirtualizedContainerService.HintSize="79,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">160.5,216.5</av:Point>
            <av:Size x:Key="ShapeSize">79,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">160.5,260 140,260 140,420</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">239.5,260 410,260 410,320</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_4" sap:VirtualizedContainerService.HintSize="79,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">300.5,126.5</av:Point>
            <av:Size x:Key="ShapeSize">79,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">300.5,170 200,170 200,216.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_2" sap:VirtualizedContainerService.HintSize="614,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">270,40 240,40 240,96.5 359.75,96.5 359.75,126.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="636,760">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="719,894" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="741,5378">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetDemandDetails_1" sap:VirtualizedContainerService.HintSize="781,5458" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>